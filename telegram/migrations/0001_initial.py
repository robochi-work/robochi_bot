# Generated by Django 5.2.1 on 2025-06-02 02:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('city', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='title')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('has_bot_administrator', models.BooleanField(default=False, verbose_name='has bot administrator')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField()),
                ('chat_id', models.BigIntegerField()),
                ('currency', models.CharField(max_length=10)),
                ('invoice_payload', models.TextField()),
                ('total_amount', models.PositiveIntegerField()),
                ('telegram_payment_charge_id', models.CharField(max_length=255, unique=True)),
                ('provider_payment_charge_id', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('successful', 'Successful')], default='successful', max_length=20)),
                ('subscription_expiration_date', models.PositiveIntegerField(blank=True, null=True)),
                ('is_first_recurring', models.BooleanField(default=False)),
                ('is_recurring', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PreCheckoutLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField()),
                ('pre_checkout_query_id', models.CharField(max_length=255)),
                ('invoice_payload', models.TextField()),
                ('total_amount', models.PositiveIntegerField()),
                ('currency', models.CharField(max_length=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserInGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('creator', 'Creator'), ('administrator', 'Administrator'), ('member', 'Member'), ('restricted', 'Restricted'), ('left', 'Left'), ('kicked', 'Kicked')], default='member', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='title')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='city.city')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(max_length=32)),
                ('message_id', models.BigIntegerField()),
                ('content', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(choices=[('received', 'Received'), ('deleted', 'Deleted'), ('delete_failed', 'Delete failed')], default='received', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='telegram.group')),
            ],
        ),
    ]
